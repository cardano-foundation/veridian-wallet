# name: Mobile Dependency Security Audit

# on:
#   workflow_dispatch:
#   schedule:
#     - cron: '0 2 * * 1'  # Every Monday at 2 AM UTC
#   push:
#     branches: [ main ]
#     paths:
#       - 'package.json'
#       - 'package-lock.json'
#       - 'ios/**'
#       - 'android/**'
#       - 'capacitor.config.ts'
#       - 'mobile-security-config.yaml'
#   pull_request:
#     paths:
#       - 'package.json'
#       - 'package-lock.json'
#       - 'ios/**'
#       - 'android/**'
#       - 'capacitor.config.ts'
#       - 'mobile-security-config.yaml'

# jobs:
#   # setup-android:
#   #   name: Setup Android Environment
#   #   runs-on: ubuntu-latest
    
#   #   steps:
#   #     - name: Checkout code
#   #       uses: actions/checkout@v4
        
#   #     - name: Setup Node.js
#   #       uses: actions/setup-node@v4
#   #       with:
#   #         node-version: '20'
#   #         cache: 'npm'
          
#   #     - name: Install dependencies
#   #       run: npm ci || npm install --no-audit --no-fund
        
#   #     - name: Build project
#   #       run: npm run build
        
#   #     - name: Sync Android platform
#   #       run: npx --yes cap sync android
        
#   #     - name: Setup Java
#   #       uses: actions/setup-java@v4
#   #       with:
#   #         distribution: 'temurin'
#   #         java-version: '17'
          
#   #     - name: Setup Gradle
#   #       uses: gradle/gradle-build-action@v2
#   #       with:
#   #         build-root-directory: android
          
#   #     - name: Make gradlew executable
#   #       working-directory: android
#   #       run: chmod +x gradlew
        
#   #     - name: Generate CycloneDX SBOM
#   #       working-directory: android
#   #       run: ./gradlew --no-daemon cyclonedxBom
        
#   #     - name: Upload Android artifacts
#   #       uses: actions/upload-artifact@v4
#   #       with:
#   #         name: android-build-artifacts
#   #         path: android/build/reports/
#   #         retention-days: 30

#   setup-ios:
#     name: Setup iOS Environment
#     runs-on: macos-latest
    
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
        
#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '20'
#           cache: 'npm'
          
#       - name: Install dependencies
#         run: npm ci || npm install --no-audit --no-fund
        
#       - name: Build project
#         run: npm run build
        
#       - name: Sync iOS platform
#         run: npx --yes cap sync ios
        
#       - name: Setup Ruby
#         uses: ruby/setup-ruby@v1
#         with:
#           ruby-version: '3.2'
#           bundler-cache: true
          
#       - name: Install CocoaPods
#         run: gem install cocoapods
        
#       - name: Install iOS dependencies
#         run: |
#           cd ios/App
#           pod install --repo-update
          
#       - name: Upload iOS artifacts
#         uses: actions/upload-artifact@v4
#         with:
#           name: ios-build-artifacts
#           path: ios/App/Podfile.lock
#           retention-days: 30

#   mobile-security-audit:
#     name: Mobile Security Audit
#     runs-on: ubuntu-latest
#     needs: [setup-ios]
    
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
        
#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '20'
#           cache: 'npm'
          
#       - name: Install dependencies
#         run: npm ci || npm install --no-audit --no-fund
        
#       # - name: Download Android artifacts
#       #   uses: actions/download-artifact@v4
#       #   with:
#       #     name: android-build-artifacts
#       #     path: android/build/reports/
          
#       - name: Download iOS artifacts
#         uses: actions/download-artifact@v4
#         with:
#           name: ios-build-artifacts
#           path: ios/App/
          
#       - name: Run mobile dependency audit
#         run: |
#           chmod +x scripts/mobile-dependency-audit.sh
#           ./scripts/mobile-dependency-audit.sh
          
#       - name: Generate HTML report
#         run: |
#           if [ -f "mobile-security-audit-report.html" ]; then
#             echo "‚úÖ HTML report generated successfully"
#           else
#             echo "‚ö†Ô∏è HTML report not generated - this is normal if no issues found"
#           fi
          
#       - name: Check for sensitive files in mobile directories
#         run: |
#           echo "üîç Checking for sensitive files in mobile directories..."
          
#           # Check for sensitive Android files
#           if find android -name "google-services.json" -o -name "*.keystore" -o -name "*.jks" | grep -q .; then
#             echo "‚ö†Ô∏è Found sensitive Android files:"
#             find android -name "google-services.json" -o -name "*.keystore" -o -name "*.jks"
#           fi
          
#           # Check for sensitive iOS files
#           if find ios -name "GoogleService-Info.plist" -o -name "*.p12" -o -name "*.mobileprovision" | grep -q .; then
#             echo "‚ö†Ô∏è Found sensitive iOS files:"
#             find ios -name "GoogleService-Info.plist" -o -name "*.p12" -o -name "*.mobileprovision"
#           fi
          
#           echo "‚úÖ Sensitive file check completed" 
#       - name: Upload audit artifacts
#         uses: actions/upload-artifact@v4
#         if: always()
#         with:
#           name: mobile-security-audit-results
#           path: |
#             android/build/reports/
#             ios/App/Podfile.lock
#             mobile-security-audit-report.html
#           retention-days: 30 