# Workflow to build and verify branch
# Name of Workflow
name: verify-branch

# Controls when the action will run. Triggers the workflow on push
# events but only for specified branches
on:
  push:
    branches:
      - main

env:
  PRODUCTION_BRANCH: main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy-branch:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    # Checks-out your repository under $GITHUB_WORKSPACE
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive  # Fetch private content
        fetch-depth: 1         # Fetch all history for .GitInfo and .Lastmod

    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Audit Dependencies
      run: |
        npm ci
        npm run audit
    
    - name: Run unit tests
      env:
        NODE_OPTIONS: "--max_old_space_size=8192"
      run: npm run test

    - name: üî® Build project
      run: npm run build

    - name: Mobile Dependency Security Check
      run: |
        echo "üîç Checking mobile dependencies for security issues..."
        
        # Check for known vulnerable mobile dependencies
        npm audit --audit-level=moderate --production || {
          echo "‚ö†Ô∏è Security vulnerabilities found in mobile dependencies"
          echo "Please review and update the following packages:"
          npm audit --audit-level=moderate --production --json | jq -r '.advisories | to_entries[] | select(.value.severity == "moderate" or .value.severity == "high" or .value.severity == "critical") | .value.module_name // empty' | sort | uniq
          exit 1
        }
        
        # Check for outdated Capacitor and mobile-specific dependencies
        echo "üì± Checking for outdated mobile dependencies..."
        npx npm-check-updates --target minor --reject "@capacitor/*,@aparajita/*,@evva/*,capacitor-*" --format group || {
          echo "‚ÑπÔ∏è Some mobile dependencies may have updates available"
        }
        
        # Check for sensitive files in mobile directories
        echo "üîç Checking for sensitive files in mobile directories..."
        if find . -name "google-services.json" -o -name "GoogleService-Info.plist" -o -name "*.keystore" -o -name "*.jks" | grep -q .; then
          echo "‚ö†Ô∏è Found sensitive files in repository"
          find . -name "google-services.json" -o -name "GoogleService-Info.plist" -o -name "*.keystore" -o -name "*.jks"
        else
          echo "‚úÖ No sensitive files found"
        fi
        
        echo "‚úÖ Mobile dependency security check completed"
